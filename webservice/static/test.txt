use std::ops::Add;
struct Point {
    x: u32,
    y: u32,
}

impl Add for Point {
    type Output = Self;
    fn add(self, other: Self) -> Self {
        Point {
            x: self.x + other.x,
            y: self.y + other.y,
        }
    }
}

trait Compute: Sized {
    fn add_points(&self, other: Self) -> Self;
}

impl Compute for Point {
    fn add_points(&self, other: Self) -> Self {
        Point {
            x: self.x + other.x,
            y: self.y + other.y,
        }
    }
}

fn main() {

    let a = Point{x: 1, y: 2};

    let b = Point{x: 1, y: 2};

    let c = a.add_points(b);
    println!("({}, {})", c.x, c.y);
}
